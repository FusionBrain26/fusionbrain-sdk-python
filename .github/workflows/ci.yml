name: test-and-deploy

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  PIP_CACHE_DIR: ${{ github.workspace }}/.pip-cache
  PYTHONPATH: ${{ github.workspace }}/src

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python + uv + cache
        uses: ./.github/actions/setup-uv
        with:
          python-version: '3.10'

      - name: Run Ruff
        run: |
          source .venv/bin/activate
          ruff check .

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python + uv + cache
        uses: ./.github/actions/setup-uv
        with:
          python-version: '3.10'

      - name: Run MyPy
        run: |
          source .venv/bin/activate
          mypy src

  tests:
    needs: [ruff, mypy]
    runs-on: ubuntu-latest
    environment: tests
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python + uv + cache
        uses: ./.github/actions/setup-uv
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run unit tests
        run: |
          source .venv/bin/activate
          pytest -m "not int" \
                 --cov=src/fusionbrain_sdk_python \
                 --cov-report=term:skip-covered \
                 --cov-report=xml \
                 -v

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: pytest
          name: codecov-coverage
          fail_ci_if_error: false
          verbose: true

  integration-tests:
    needs: [tests]
    runs-on: ubuntu-latest
    environment: tests
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10' ]
    env:
      FB_API_KEY: ${{ secrets.FB_API_KEY }}
      FB_API_SECRET: ${{ secrets.FB_API_SECRET }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python + uv + cache
        uses: ./.github/actions/setup-uv
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run integration tests
        run: |
          source .venv/bin/activate
          pytest -m int -v

  build:
    needs: [integration-tests]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify tag matches allowed patterns
        shell: bash
        run: |
          echo "Ref: ${GITHUB_REF}"
          if [[ "${GITHUB_REF}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]] || [[ "${GITHUB_REF}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+\.dev0$ ]]; then
            echo "Tag matches allowed release patterns"
          else
            echo "Tag must be exactly vX.Y.Z or vX.Y.Z.dev0" >&2
            exit 1
          fi

      - name: Setup Python + uv + cache
        uses: ./.github/actions/setup-uv
        with:
          python-version: '3.10'
          dev: 'false'

      - name: Build package (sdist + wheel)
        run: |
          source .venv/bin/activate
          uv build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/*
          retention-days: 7

  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Classify tag for publishing
        id: classify
        shell: bash
        run: |
          ref="${GITHUB_REF}"
          echo "ref=${ref}"
          if [[ "${ref}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is_pypi=true" >> "$GITHUB_OUTPUT"
            echo "is_testpypi=false" >> "$GITHUB_OUTPUT"
          elif [[ "${ref}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+\.dev0$ ]]; then
            echo "is_pypi=false" >> "$GITHUB_OUTPUT"
            echo "is_testpypi=true" >> "$GITHUB_OUTPUT"
          else
            echo "Tag must be exactly vX.Y.Z or vX.Y.Z.dev0" >&2
            exit 1
          fi

      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist

      - name: Publish to TestPyPI (vX.Y.Z.dev0)
        if: ${{ steps.classify.outputs.is_testpypi == 'true' }}
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist
          skip-existing: true

      - name: Publish to PyPI (vX.Y.Z)
        if: ${{ steps.classify.outputs.is_pypi == 'true' }}
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          packages-dir: dist
          skip-existing: true
