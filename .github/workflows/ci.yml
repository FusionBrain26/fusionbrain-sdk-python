name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger from UI

env:
  PIP_CACHE_DIR: ${{ github.workspace }}/.pip-cache
  PYTHONPATH: ${{ github.workspace }}/src

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            .pip-cache
            .venv
            .ruff_cache
            .mypy_cache
            .pytest_cache
          key: ${{ runner.os }}-python-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv sync
          
      - name: Run Ruff
        run: |
          source .venv/bin/activate
          ruff check .
          
      - name: Run MyPy
        run: |
          source .venv/bin/activate
          mypy src

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            .pip-cache
            .venv
            .ruff_cache
            .mypy_cache
            .pytest_cache
          key: ${{ runner.os }}-python-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv sync
          
      - name: Run unit tests
        run: |
          source .venv/bin/activate
          pytest tests/unit -v --cov=src --cov-report=xml:coverage.xml --cov-report term
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 7